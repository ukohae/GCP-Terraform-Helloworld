pipeline {
    agent any

    stages {
        stage("Checkout") {
            steps {
                checkout([$class: 'GitSCM', 
                branches: [[name: '*/main']], 
                extensions: [], 
                userRemoteConfigs: [[url: 'youUrl']]])
            }
        }
        
        stage('Build') {
            steps {
                // Build your Docker image
                script {
                    docker.build("<your-docker-image-name>:<your-image-tag>")
                }
            }
        }

        stage('Push to GCP Container Registry') {
            steps {
                script {
                    // Authenticate with GCP using service account key file
                    withCredentials([file(credentialsId: 'gcp-service-account-key', variable: 'GCLOUD_KEY')]) {
                        sh 'gcloud auth activate-service-account --key-file=${GCLOUD_KEY}'
                    }

                    // Configure GCP project and container registry
                    withCredentials([string(credentialsId: 'gcp-project-id', variable: 'GCP_PROJECT_ID')]) {
                        sh 'gcloud config set project ${GCP_PROJECT_ID}'
                    }

                    // Configure Docker authentication
                    withCredentials([string(credentialsId: 'gcr-service-account-key', variable: 'GCR_KEY')]) {
                        sh '''
                            echo ${GCR_KEY} | base64 --decode > gcr-key.json
                            gcloud auth activate-service-account --key-file=gcr-key.json
                            gcloud auth configure-docker
                        '''
                    }

                    // Push Docker image to GCP Container Registry
                    sh 'docker push <your-docker-image-name>:<your-image-tag>'
                }
            }
        }
    }
}
